Discuss the solution cost of your LE

As we implemented the ring election for our solution, the cost of our LE
is O(2n-1) with n as number of messages, that need to be sent until a
leader is elected. To be more precise, every one of the n servers needs
to post (send message) to its neighbor in the ring until a leader is elected.
Then another n messages are necessary to spread the result of the election.
It will always have this cost (best case = worst case)



Discuss whether your LE fulfills the properties of a correct LE algo

As briefly mentioned above our LE is implemented using the ring election
algorithm. It fulfills the properties of a correct LE algorithm, because
first, using the ring algorithm safety and liveness are generally satisfied 
if no failures of servers occur during the election. The forwarding of messages in
the ring can take place uninhibited as (thanks to TCP) we can detect if an
adjacent server is down and forward the message to the failed servers successor.
(In send_election_message we check if the posting returned successfully and 
set the servers attribute next_ip accordingly). Also the liveness problem,
occuring when a server fails while being the designated new leader is solved
in our implementation, as the propagation always ends at the initiator.



Discuss the cost of adding messages to the board

As soon as a message is posted to a server this message is first sent to
the elected leader (not saved locally). The leader then sends the message
together with an ID to every other server. 
This means the payload for each message is 1.
In conclusion, the overall cost of adding a message to the board in terms 
of messages sent is n.



Briefly discuss pros&consof centralized solutions

Pro:
- They inherently make ensuring consistency easy

Contra:
- We need to implement some "infrastructure", before we can implement the
solution itself (e. g. elect a leader)
- vulnerability: if the central node fails, the whole system fails unless
we implement some kind of recovery mechanism (e. g. new election)

